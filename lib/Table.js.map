{"version":3,"file":"Table.js","sourceRoot":"","sources":["../src/Table.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA,6BAA+B;AAC/B,6CAA0C;AAC1C,yCAAsC;AACtC,gDAAyC;AASzC;IAA2B,yBAA+B;IAA1D;;IAgCA,CAAC;IA/BG,sBAAM,GAAN;;QACI,IAAI,WAAW,GAAgB,IAAI,CAAC;QACpC,IAAI,SAAS,GAAgB,IAAI,CAAC;QAElC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,UAAC,CAAM;YAC/C,IAAI,CAAA,CAAC,aAAD,CAAC,uBAAD,CAAC,CAAE,IAAI,MAAK,yBAAW,EAAE;gBACzB,WAAW,GAAG,CAAC,CAAC;aACnB;iBAAM,IAAI,CAAA,CAAC,aAAD,CAAC,uBAAD,CAAC,CAAE,IAAI,MAAK,qBAAS,EAAE;gBAC9B,SAAS,GAAG,CAAC,CAAC;aACjB;QACL,CAAC,CAAC,CAAC;QAEH,SAAS,GAAG,KAAK,CAAC,YAAY,CAAC,SAAS,EAAE;YACtC,IAAI,EAAE,MAAA,MAAA,SAAS,CAAC,KAAK,CAAC,IAAI,mCAAI,IAAI,CAAC,KAAK,CAAC,IAAI,mCAAI,EAAE;YACnD,eAAe,EAAE,CAAC,WAAW;YAC7B,KAAK,EAAE,MAAA,MAAA,SAAS,CAAC,KAAK,CAAC,KAAK,mCAAI,IAAI,CAAC,KAAK,CAAC,KAAK,mCAAI,KAAK;YACzD,YAAY,EAAE,MAAA,MAAA,SAAS,CAAC,KAAK,CAAC,YAAY,mCAAI,IAAI,CAAC,KAAK,CAAC,YAAY,mCAAI,EAAE;YAC3E,WAAW,EAAE,MAAA,MAAA,SAAS,CAAC,KAAK,CAAC,WAAW,mCAAI,IAAI,CAAC,KAAK,CAAC,WAAW,mCAAI,EAAE;SAC3E,CAAC,CAAC;QAEH,OAAO,CACH,oBAAC,eAAI,IACD,KAAK,EAAE;gBACH,KAAK,EAAE,MAAM;aAChB;YAEA,WAAW;YACX,SAAS,CACP,CACV,CAAC;IACN,CAAC;IACL,YAAC;AAAD,CAAC,AAhCD,CAA2B,KAAK,CAAC,aAAa,GAgC7C;AAhCY,sBAAK","sourcesContent":["import * as React from \"react\";\nimport {TableHeader} from \"./TableHeader\";\nimport {TableBody} from \"./TableBody\";\nimport {View} from \"@react-pdf/renderer\";\n\ninterface TableProps {\n    data?: any[];\n    zebra?: boolean;\n    evenRowColor?: string;\n    oddRowColor?: string;\n}\n\nexport class Table extends React.PureComponent<TableProps> {\n    render() {\n        let tableHeader: JSX.Element = null;\n        let tableBody: JSX.Element = null;\n\n        React.Children.forEach(this.props.children, (c: any) => {\n            if (c?.type === TableHeader) {\n                tableHeader = c;\n            } else if (c?.type === TableBody) {\n                tableBody = c;\n            }\n        });\n\n        tableBody = React.cloneElement(tableBody, {\n            data: tableBody.props.data ?? this.props.data ?? [],\n            renderTopBorder: !tableHeader,\n            zebra: tableBody.props.zebra ?? this.props.zebra ?? false,\n            evenRowColor: tableBody.props.evenRowColor ?? this.props.evenRowColor ?? '',\n            oddRowColor: tableBody.props.oddRowColor ?? this.props.oddRowColor ?? '',\n        });\n\n        return (\n            <View\n                style={{\n                    width: \"100%\",\n                }}\n            >\n                {tableHeader}\n                {tableBody}\n            </View>\n        );\n    }\n}\n"]}